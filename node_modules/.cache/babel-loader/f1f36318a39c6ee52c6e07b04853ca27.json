{"ast":null,"code":"var _jsxFileName = \"/Users/cocoa/Documents/GitHub/react-study/Movie/src/components/Movie.js\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie(_ref) {\n  let {\n    coverImg,\n    title,\n    summary,\n    genres\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: coverImg,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: genre\n      }, genre, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Movie;\nMovie.propTypes = {\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes\n};\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["PropTypes","Link","Movie","coverImg","title","summary","genres","map","genre","propTypes","string","isRequired"],"sources":["/Users/cocoa/Documents/GitHub/react-study/Movie/src/components/Movie.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\nfunction Movie({coverImg, title, summary, genres}){\n    return (\n        <div>\n            <img src={coverImg} alt={title} />\n            <h2>{title}</h2>\n            <p>{summary}</p>\n            <ul>\n                {genres.map((genre) => (<li key={genre}>{genre}</li>))}\n            </ul>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    coverImg: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes\n\n}\n\n\nexport default Movie;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAAQC,IAAI,QAAO,kBAAkB;AAAC;AAEtC,SAASC,KAAK,OAAoC;EAAA,IAAnC;IAACC,QAAQ;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC;EAC7C,oBACI;IAAA,wBACI;MAAK,GAAG,EAAEH,QAAS;MAAC,GAAG,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAA,UAAKA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eAChB;MAAA,UAAIC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,eAChB;MAAA,UACKC,MAAM,CAACC,GAAG,CAAEC,KAAK,iBAAM;QAAA,UAAiBA;MAAK,GAAbA,KAAK;QAAA;QAAA;QAAA;MAAA,QAAe;IAAC;MAAA;MAAA;MAAA;IAAA,QACrD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,KAXQN,KAAK;AAadA,KAAK,CAACO,SAAS,GAAG;EACdN,QAAQ,EAAEH,SAAS,CAACU,MAAM,CAACC,UAAU;EACrCP,KAAK,EAAEJ,SAAS,CAACU,MAAM,CAACC,UAAU;EAClCN,OAAO,EAAEL,SAAS,CAACU,MAAM,CAACC,UAAU;EACpCL,MAAM,EAAEN;AAEZ,CAAC;AAGD,eAAeE,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
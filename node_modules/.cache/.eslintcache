[{"/Users/cocoa/Documents/react-study/ToDo/src/index.js":"1","/Users/cocoa/Documents/react-study/ToDo/src/App.js":"2","/Users/cocoa/Documents/react-study/CoinTracker/src/index.js":"3","/Users/cocoa/Documents/react-study/CoinTracker/src/App.js":"4","/Users/cocoa/Documents/GitHub/react-study/CoinTracker/src/index.js":"5","/Users/cocoa/Documents/GitHub/react-study/CoinTracker/src/App.js":"6","/Users/cocoa/Documents/GitHub/react-study/Movie/src/index.js":"7","/Users/cocoa/Documents/GitHub/react-study/Movie/src/App.js":"8","/Users/cocoa/Documents/GitHub/react-study/Movie/src/routes/Home.js":"9","/Users/cocoa/Documents/GitHub/react-study/Movie/src/routes/Detail.js":"10","/Users/cocoa/Documents/GitHub/react-study/Movie/src/components/Movie.js":"11","/Users/cocoa/Documents/GitHub/MovieLike/src/index.js":"12","/Users/cocoa/Documents/GitHub/MovieLike/src/App.js":"13","/Users/cocoa/Documents/GitHub/MovieLike/src/routes/Detail.js":"14","/Users/cocoa/Documents/GitHub/MovieLike/src/routes/Home.js":"15","/Users/cocoa/Documents/GitHub/MovieLike/src/components/Movie.js":"16","/Users/cocoa/Documents/GitHub/MovieWeb/src/index.js":"17","/Users/cocoa/Documents/GitHub/MovieWeb/src/App.js":"18","/Users/cocoa/Documents/GitHub/MovieWeb/src/atom/NavList.js":"19","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Movie.js":"20","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Slide.js":"21","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Loading.js":"22","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Nav.js":"23","/Users/cocoa/Documents/GitHub/MovieWeb/src/atom/Atoms.js":"24","/Users/cocoa/Documents/GitHub/MovieWeb/src/router/Home.js":"25","/Users/cocoa/Documents/GitHub/MovieWeb/src/router/List.js":"26","/Users/cocoa/Documents/GitHub/MovieWeb/src/router/Detail.js":"27","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Point.js":"28"},{"size":189,"mtime":1665553701022,"results":"29","hashOfConfig":"30"},{"size":1347,"mtime":1665625298263,"results":"31","hashOfConfig":"30"},{"size":189,"mtime":1665629634693,"results":"32","hashOfConfig":"33"},{"size":2925,"mtime":1665648120168,"results":"34","hashOfConfig":"33"},{"size":189,"mtime":1665629634693,"results":"35","hashOfConfig":"36"},{"size":2925,"mtime":1665648809967,"results":"37","hashOfConfig":"36"},{"size":189,"mtime":1665629634693,"results":"38","hashOfConfig":"39"},{"size":596,"mtime":1665989778990,"results":"40","hashOfConfig":"39"},{"size":1435,"mtime":1665988271960,"results":"41","hashOfConfig":"39"},{"size":3044,"mtime":1665987782881,"results":"42","hashOfConfig":"39"},{"size":1122,"mtime":1665988349403,"results":"43","hashOfConfig":"39"},{"size":189,"mtime":1665629634693,"results":"44","hashOfConfig":"45"},{"size":596,"mtime":1665989778990,"results":"46","hashOfConfig":"45"},{"size":3044,"mtime":1665991527900,"results":"47","hashOfConfig":"45"},{"size":1435,"mtime":1665988271960,"results":"48","hashOfConfig":"45"},{"size":1122,"mtime":1665988349403,"results":"49","hashOfConfig":"45"},{"size":220,"mtime":1666078739396,"results":"50","hashOfConfig":"51"},{"size":692,"mtime":1666082412952,"results":"52","hashOfConfig":"51"},{"size":322,"mtime":1666081208689,"results":"53","hashOfConfig":"51"},{"size":1417,"mtime":1666078805856,"results":"54","hashOfConfig":"51"},{"size":1646,"mtime":1666078389240,"results":"55","hashOfConfig":"51"},{"size":205,"mtime":1666079329544,"results":"56","hashOfConfig":"51"},{"size":2588,"mtime":1666140709380,"results":"57","hashOfConfig":"51"},{"size":407,"mtime":1666070727284,"results":"58","hashOfConfig":"51"},{"size":1981,"mtime":1666080730748,"results":"59","hashOfConfig":"51"},{"size":2074,"mtime":1666070165576,"results":"60","hashOfConfig":"51"},{"size":1312,"mtime":1666072601701,"results":"61","hashOfConfig":"51"},{"size":1078,"mtime":1666070959492,"results":"62","hashOfConfig":"51"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10an8yt",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1monkee",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ltxl5p",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"i5o2gp",{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t3yu3i",{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"odje5p",{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"158"},"/Users/cocoa/Documents/react-study/ToDo/src/index.js",[],[],"/Users/cocoa/Documents/react-study/ToDo/src/App.js",["159"],[],"/Users/cocoa/Documents/react-study/CoinTracker/src/index.js",[],[],"/Users/cocoa/Documents/react-study/CoinTracker/src/App.js",["160"],[],"/Users/cocoa/Documents/GitHub/react-study/CoinTracker/src/index.js",[],[],"/Users/cocoa/Documents/GitHub/react-study/CoinTracker/src/App.js",["161"],[],"/Users/cocoa/Documents/GitHub/react-study/Movie/src/index.js",[],[],[],"/Users/cocoa/Documents/GitHub/react-study/Movie/src/App.js",[],[],"/Users/cocoa/Documents/GitHub/react-study/Movie/src/routes/Home.js",[],[],"/Users/cocoa/Documents/GitHub/react-study/Movie/src/routes/Detail.js",["162"],[],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"../css/routes/Detail.module.css\"\n\nfunction Detail(){\n    const {id} = useParams();\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovie] = useState([]);\n    const [genres, setGenres] = useState([])\n\n\n    /* API 받아오기 */\n    const getMovie = async() => {\n        const json = await (\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n\n        console.log(json);\n        setMovie(json.data.movie);\n        setGenres(json.data.movie.genres);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        if (id !== \"\" && id.length > 1) {\n            getMovie();\n        }\n    }, [id])\n\n    return (\n        <div className={styles.container}>\n            {loading ? (\n                <div className={styles.loader}>\n                    <span>Loading...</span>\n                </div>\n            ) : (\n                <div className={styles.movie}>\n                    <img\n                    src={movie.background_image_original}\n                    alt={movie.background_image_original}\n                    className={styles.movie__bg_img}\n                    />\n                    <div className={styles.movie__header}>\n                        <div className={styles.movie__big__title}>\n                            <img\n                                src={movie.medium_cover_image}\n                                alt={movie.medium_cover_image}\n                                className={styles.movie__img}\n                            />\n                            <div>\n                                <h1 className={styles.movie__title}> {movie.title} </h1>\n                                <div className={styles.movie__year}>\n                                    <span>{movie.year}년 • </span>\n                                    <span>{movie.runtime}분</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={styles.movie__rate__row}>\n                        <div className={styles.movie__rate}>rate: {movie.rating} </div>\n                        <div className={styles.movie__rate}>\n                            downloed: {movie.download_count}\n                        </div>\n                        <div className={styles.movie__rate}>\n                            like: {movie.like_count}{\" \"}\n                        </div>\n                    </div>\n\n                    <div className={styles.movie__content}>\n                        <div>{movie.description_full}</div>\n                        <div className={styles.movie__genres}>\n                            {genres.map((g) => (\n                                <span key={g}>{g} </span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Detail;\n","/Users/cocoa/Documents/GitHub/react-study/Movie/src/components/Movie.js",[],[],"/Users/cocoa/Documents/GitHub/MovieLike/src/index.js",[],[],"/Users/cocoa/Documents/GitHub/MovieLike/src/App.js",[],[],"/Users/cocoa/Documents/GitHub/MovieLike/src/routes/Detail.js",["163"],[],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"../css/routes/Detail.module.css\"\n\nfunction Detail(){\n    const {id} = useParams();\n    const [loading, setLoading] = useState(true);\n    const [movie, setMovie] = useState([]);\n    const [genres, setGenres] = useState([])\n\n\n    /* API 받아오기 */\n    const getMovie = async() => {\n        const json = await (\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n\n        console.log(json);\n        setMovie(json.data.movie);\n        setGenres(json.data.movie.genres);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        if (id !== \"\" && id.length > 1) {\n            getMovie();\n        }\n    }, [id])\n\n    return (\n        <div className={styles.container}>\n            {loading ? (\n                <div className={styles.loader}>\n                    <span>Loading...</span>\n                </div>\n            ) : (\n                <div className={styles.movie}>\n                    <img\n                    src={movie.background_image_original}\n                    alt={movie.background_image_original}\n                    className={styles.movie__bg_img}\n                    />\n                    <div className={styles.movie__header}>\n                        <div className={styles.movie__big__title}>\n                            <img\n                                src={movie.medium_cover_image}\n                                alt={movie.medium_cover_image}\n                                className={styles.movie__img}\n                            />\n                            <div>\n                                <h1 className={styles.movie__title}> {movie.title} </h1>\n                                <div className={styles.movie__year}>\n                                    <span>{movie.year}년 • </span>\n                                    <span>{movie.runtime}분</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={styles.movie__rate__row}>\n                        <div className={styles.movie__rate}>rate: {movie.rating} </div>\n                        <div className={styles.movie__rate}>\n                            download: {movie.download_count}\n                        </div>\n                        <div className={styles.movie__rate}>\n                            like: {movie.like_count}{\" \"}\n                        </div>\n                    </div>\n\n                    <div className={styles.movie__content}>\n                        <div>{movie.description_full}</div>\n                        <div className={styles.movie__genres}>\n                            {genres.map((g) => (\n                                <span key={g}>{g} </span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Detail;\n","/Users/cocoa/Documents/GitHub/MovieLike/src/routes/Home.js",[],[],"/Users/cocoa/Documents/GitHub/MovieLike/src/components/Movie.js",[],[],"/Users/cocoa/Documents/GitHub/MovieWeb/src/index.js",[],[],"/Users/cocoa/Documents/GitHub/MovieWeb/src/App.js",["164","165","166","167"],[],"import {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Detail from \"./router/Detail\";\nimport Home from \"./router/Home\";\nimport List from \"./router/List\";\nimport Nav from \"./components/Nav\"\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n} from 'recoil';\n\nfunction App() {\n  return (\n    <RecoilRoot >\n      <Router>\n        <Nav />\n        <Routes>\n          <Route path=\"/page/:detail/:num\" element={<List />} />\n          <Route path=\"/movie/:id\" element={<Detail />} />\n          <Route path={`${process.env.PUBLIC_URL}/`} element={<Home />} />\n        </Routes>\n      </Router>\n    </RecoilRoot>\n  )\n}\n\nexport default App;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/atom/NavList.js",[],[],"/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Movie.js",["168"],[],"import PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styles from \".//css/Movie.module.css\";\n\nfunction Movie({ id, coverImg, title, year, summary, genres, movie_style }){\n\n    // 포스터가 없으면 안되는 조건\n    if(coverImg == \"\"){\n        return null;\n    }\n\n    return (\n        <div className={styles.movie} style={movie_style}>\n            <Link to={`/movie/${id}`}><img src={coverImg} alt={title} className={styles.movie__img} /></Link>\n            \n            <div>\n                <h2 className={styles.movie__title}>\n                    <Link to={`/movie/${id}`}>{title && title.length > 50 ? `${title.slice(0, 50)}...` : title}</Link>\n                </h2>\n                <h3 className={styles.movie__year}>{year}</h3>\n                <p className={styles.movie__summary}>{summary && summary.length > 235 ? `${summary.slice(0, 235)}...` : summary}</p>\n                <ul className={styles.movie__genres}>\n                    {genres.map((genre) => (\n                        <li key={genre}>{genre}</li>\n                    ))}\n                </ul>\n            </div>\n    \n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    coverImg: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Slide.js",["169"],[],"import { useState, useEffect } from \"react\";\nimport styles from \".//css/Slide.module.css\";\nimport Movie from \"./Movie\";\n\nfunction Slide({ movieContents }){\n    const [trans, setTrans] = useState(0);\n\n    const onClickL = () => {\n        if (trans >= 0) {\n          return;\n        }\n        setTrans(current => current + 350);\n    }\n    \n    const onClickR = () => {\n        if (trans <= -2450) {\n          return;\n        }\n        setTrans(current => current - 350);\n    }\n\n    return(\n        <div className={styles.container}>\n            <div className={styles.slide__show}>\n\n                <div className={styles.slide} style={{\n                    transform: `translateX(${trans}px)`\n                }}>\n                    \n                {movieContents.map((movie) => (\n                    <Movie\n                        key={movie.id}\n                        id={movie.id}\n                        year={movie.year}\n                        coverImg={movie.medium_cover_image}\n                        title={movie.title}\n                        genres={movie.genres}\n                        movie_style={{\n                            minWidth: \"350px\",\n                            height: \"300px\",\n                        }}\n                    />\n\n                ))}\n                </div>\n\n                <div>\n                    <button class={styles.left} onClick={onClickL}><i class=\"fas fa-angle-left\"></i></button>\n                    <button class={styles.right} onClick={onClickR}><i class=\"fas fa-angle-right\"></i></button>          \n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Slide;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Loading.js",[],[],"/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Nav.js",["170","171","172","173","174","175","176"],[],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { listPageReLoading, focusNav } from \"../atom/Atoms\";\nimport navList from \"../atom/NavList\";\nimport styles from \".//css/Nav.module.css\";\n\nfunction Nav() {\n    let last_known_scroll_position = 0;\n    let ticking = false;\n    const [changing, setChanging] = useState(false);\n    const [scrolling, setScrolling] = useState(false);\n\n    const pageReLoading = useSetRecoilState(listPageReLoading);\n    const [focusPath, setFocusPath] = useRecoilState(focusNav);\n\n    /* 스크롤 했을 때 설정 */\n    const doSomething = (scroll_pos) => {\n        if (scroll_pos >= 10) {\n            setChanging(true);\n            setScrolling(true);\n        } else {\n            setChanging(false);\n            setScrolling(false);\n        }\n    }\n\n    /* 스크롤 감지 */\n    window.addEventListener('scroll', function(e) {\n    last_known_scroll_position = window.scrollY;\n\n        if (!ticking) {\n            window.requestAnimationFrame(function() {\n                doSomething(last_known_scroll_position);\n                ticking = false;\n            });\n            ticking = true;\n        }\n    });\n\n    /* 네비게이션바 마우스 */\n    const onMouseOverOut = () => {\n        if (scrolling)\n            return;      \n        setChanging(current => !current);\n    }    \n\n    /* 네비게이션바 클릭 리로드 */\n    const optionOnClick = () => {\n        pageReLoading(true);\n    }\n    \n    return (\n        <div>\n            \n            <nav className={styles.container} onMouseOver={onMouseOverOut} onMouseOut={onMouseOverOut} \n                style={changing ? {backgroundColor : \"black\", boxShadow: \"rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,rgba(0, 0, 0, 0.3) 0px 8px 16px -8px\"}\n                : {backgroundColor : \"transparent\"}}>\n\n                <div className={styles.title}>\n                    <Link to=\"/MovieWeb\" onClick={() => setFocusPath(\"\")}>\n                        <strong style={{color : \"#E50914\"}}>NETFLEX</strong>\n                    </Link>\n                </div>\n             \n                <ul className={styles.icon__list}>\n                    <li><a href=\"https://github.com/\" target=\"_blank\"><i class=\"fab fa-github\"></i></a></li>\n                    <li><a href=\"https://www.instagram.com/\" target=\"_blank\"><i class=\"fab fa-instagram\"></i></a></li>\n                </ul>\n\n            </nav>\n\n            <div className={styles.null}></div>\n        </div>\n    )\n}\n\nexport default Nav;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/atom/Atoms.js",[],[],[],"/Users/cocoa/Documents/GitHub/MovieWeb/src/router/Home.js",["177","178"],[],"import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \".//css/Home.module.css\";\nimport Slide from \"../components/Slide\";\nimport navList from \"../atom/NavList\";\nimport axios from \"axios\";\nimport Loading from \"../components/Loading\";\n\n\nfunction Home(){\n    \n    /* API 받아오기 */\n    const [ movieContents, setMovieContents ] = useState([]);\n  \n    useEffect(() => {\n\n        /* map으로 navList의 목록을 api로 받아온다 */\n        const request = navList.map(({title, path}) => {\n            return axios.get('https://yts.mx/api/v2/list_movies.json?' + path, {\n                params: {\n                  limit: 10,\n                  sort_by: 'download_count',\n                  limit: 20,\n                }\n            })\n        })\n\n        axios.all(request)\n        .then(axios.spread(async (...response) => {\n            const data = await response.map(res => {\n                if(res.status === 200){\n                    return res.data.data.movies;\n                }\n            })\n\n            console.log(data);\n            setMovieContents(data);\n        }))\n\n    }, []) \n\n    \n    /* 화면 그리기 */\n    return (\n        <div className={styles.container}>\n          {navList.map((slide, idx) => {\n            return (\n                \n              <div className={styles.slide__box}>\n                  <h3 className={styles.title}>\n                    <Link to={`/page/${slide.path}/1`}>\n                      <i class=\"fas fa-external-link-alt\"></i>\n                      <span>{slide.title} Movie</span>\n                    </Link>\n                  </h3>\n                  { movieContents && movieContents.length === 0 ? (\n                      <Loading />\n                    ) : (\n                      <Slide movieContents={movieContents[idx]} />\n                    )\n                  }\n              </div>\n            )\n          })}\n          \n        </div>\n    );\n}\n\nexport default Home;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/router/List.js",["179","180"],[],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport { listPageReLoading, focusNav} from \"../atom/Atoms\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\n\nimport Movie from \"../components/Movie\";\nimport Loading from \"../components/Loading\";\nimport styles from \".//css/List.module.css\";\n\n\nconst listNums = [...Array(10)].map((_,i) => i + 1);\n\nfunction List() {\n  const { num, detail } = useParams();\n\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const [reloading, setReloading] = useRecoilState(listPageReLoading);\n  const focusPage = useSetRecoilState(focusNav);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?page=${num}&${detail}&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setReloading(false);\n    setLoading(true);\n    focusPage(detail);\n\n    getMovies();\n  }, [reloading]);\n  \n  return (\n\n    <div className={styles.container}>\n    \n      {loading ? (\n        <Loading />\n      ) : (\n\n        <div className={styles.movies}>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>      \n      )}\n\n      <ul className={styles.footer}>\n        {loading ? null : listNums.map(listNum => {\n          return (\n            <li>\n              <Link \n                to={`/page/${detail}/${listNum}`} \n                onClick={() => setReloading(true)}\n                className={\n                  listNum == num ? styles.focusing : null\n                }>{listNum}</Link>\n            </li>\n          )\n        }\n        )}\n      </ul>\n        \n    </div>\n  );\n}\n\nexport default List;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/router/Detail.js",["181"],[],"import { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport Point from \"../components/Point\";\nimport styles from \".//css/Home.module.css\";\nimport Loading from \"../components/Loading\";\n\nfunction Detail() {\n    const {id} = useParams();\n    const [loading, setLoading] = useState(true);\n    const [datas, setDatas] = useState({});\n\n    useEffect(() => {\n        fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        .then(response => response.json())\n        .then(json => {\n            setDatas(json.data.movie);\n            setLoading(false);\n        })\n    }, []);\n    console.log(datas);\n    return (\n        <div className={styles.container}>\n            {loading ? (\n                <Loading />\n            ) : (\n                <Point \n                    background_image_original={datas.background_image_original}\n                    medium_cover_image={datas.medium_cover_image}\n                    url={datas.url}\n                    title_long={datas.title_long}\n                    rating={datas.rating}\n                    runtime={datas.runtime}\n                    genres={datas.genres}\n                    download_count={datas.download_count}             \n                />\n            )}\n        </div>\n    );\n  }\n  export default Detail;\n","/Users/cocoa/Documents/GitHub/MovieWeb/src/components/Point.js",["182","183","184"],[],"import styles from \".//css/Point.module.css\";\n\nfunction Point({background_image_original, medium_cover_image, url, title_long, rating, runtime, genres, download_count}) {\n    return (\n        <div>\n            <img className={styles.bg} src={background_image_original} />           \n            <div className={styles.show}>\n                <img className={styles.img} src={medium_cover_image} />\n                <div className={styles.textbox}>\n                    <h1 className={styles.title}><a href={url} target=\"_blank\">{title_long}</a></h1>\n                    <ul>\n                        <li>Rating {rating}</li>\n                        <li>Runtime {runtime}</li>\n                        <li>Download {download_count}</li>\n                        <li>\n                            Genres\n                            <ul>\n                                {genres.map(genre => <li>{genre}</li>)}\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Point;\n",{"ruleId":"185","severity":1,"message":"186","line":1,"column":19,"nodeType":"187","messageId":"188","endLine":1,"endColumn":28},{"ruleId":"189","severity":1,"message":"190","line":17,"column":22,"nodeType":"191","messageId":"192","endLine":17,"endColumn":24},{"ruleId":"189","severity":1,"message":"190","line":17,"column":22,"nodeType":"191","messageId":"192","endLine":17,"endColumn":24},{"ruleId":"193","severity":1,"message":"194","line":28,"column":8,"nodeType":"195","endLine":28,"endColumn":12,"suggestions":"196"},{"ruleId":"193","severity":1,"message":"194","line":28,"column":8,"nodeType":"195","endLine":28,"endColumn":12,"suggestions":"197"},{"ruleId":"185","severity":1,"message":"198","line":12,"column":3,"nodeType":"187","messageId":"188","endLine":12,"endColumn":7},{"ruleId":"185","severity":1,"message":"199","line":13,"column":3,"nodeType":"187","messageId":"188","endLine":13,"endColumn":11},{"ruleId":"185","severity":1,"message":"200","line":14,"column":3,"nodeType":"187","messageId":"188","endLine":14,"endColumn":17},{"ruleId":"185","severity":1,"message":"201","line":15,"column":3,"nodeType":"187","messageId":"188","endLine":15,"endColumn":17},{"ruleId":"202","severity":1,"message":"203","line":8,"column":17,"nodeType":"204","messageId":"205","endLine":8,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":1,"column":20,"nodeType":"187","messageId":"188","endLine":1,"endColumn":29},{"ruleId":"185","severity":1,"message":"186","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":19},{"ruleId":"185","severity":1,"message":"201","line":3,"column":26,"nodeType":"187","messageId":"188","endLine":3,"endColumn":40},{"ruleId":"185","severity":1,"message":"206","line":5,"column":8,"nodeType":"187","messageId":"188","endLine":5,"endColumn":15},{"ruleId":"185","severity":1,"message":"207","line":15,"column":12,"nodeType":"187","messageId":"188","endLine":15,"endColumn":21},{"ruleId":"185","severity":1,"message":"208","line":49,"column":11,"nodeType":"187","messageId":"188","endLine":49,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":67,"column":25,"nodeType":"211","messageId":"212","endLine":67,"endColumn":71,"fix":"213"},{"ruleId":"209","severity":1,"message":"210","line":68,"column":25,"nodeType":"211","messageId":"212","endLine":68,"endColumn":78,"fix":"214"},{"ruleId":"215","severity":1,"message":"216","line":23,"column":19,"nodeType":"217","messageId":"205","endLine":23,"endColumn":24},{"ruleId":"189","severity":1,"message":"218","line":30,"column":49,"nodeType":"191","messageId":"219","endLine":30,"endColumn":51},{"ruleId":"193","severity":1,"message":"220","line":39,"column":6,"nodeType":"195","endLine":39,"endColumn":17,"suggestions":"221"},{"ruleId":"202","severity":1,"message":"203","line":72,"column":27,"nodeType":"204","messageId":"205","endLine":72,"endColumn":29},{"ruleId":"193","severity":1,"message":"222","line":19,"column":8,"nodeType":"195","endLine":19,"endColumn":10,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":6,"column":13,"nodeType":"211","endLine":6,"endColumn":74},{"ruleId":"224","severity":1,"message":"225","line":8,"column":17,"nodeType":"211","endLine":8,"endColumn":72},{"ruleId":"209","severity":1,"message":"210","line":10,"column":50,"nodeType":"211","messageId":"212","endLine":10,"endColumn":80,"fix":"226"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.","ArrayExpression",["227"],["228"],"'atom' is defined but never used.","'selector' is defined but never used.","'useRecoilState' is defined but never used.","'useRecoilValue' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'navList' is defined but never used.","'focusPath' is assigned a value but never used.","'optionOnClick' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"229","text":"230"},{"range":"231","text":"230"},"no-dupe-keys","Duplicate key 'limit'.","ObjectExpression","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'detail', 'focusPage', 'getMovies', and 'setReloading'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["233"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"234","text":"230"},{"desc":"235","fix":"236"},{"desc":"235","fix":"237"},[2228,2228]," rel=\"noreferrer\"",[2344,2344],{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},[524,524],"Update the dependencies array to be: [getMovie, id]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [detail, focusPage, getMovies, reloading, setReloading]",{"range":"245","text":"246"},"Update the dependencies array to be: [id]",{"range":"247","text":"248"},[763,767],"[getMovie, id]",[763,767],[1067,1078],"[detail, focusPage, getMovies, reloading, setReloading]",[616,618],"[id]"]